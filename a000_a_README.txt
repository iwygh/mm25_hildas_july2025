READMESaturday, July 12, 2025Ian MathesonPhD candidate, University of Arizona, Aerospace & Mechanical Engineeringianmatheson@arizona.eduPhD advisor: Renu Malhotra, U of A, Lunar & Planetary Laboratorymalhotra@arizona.eduThis is a simple readme file for the Python scripts accompanyingMatheson & Malhotra 2025, Icarus,"On the Forced Plane of the Hilda Asteroids".I (IM) am not a software engineer or a computer scientist, so my code is verysimple and mostly undocumented. I aim to be able to read the code myself,and that is all. If you want to reuse my code to try to reproduce or extend theresults presented in the paper, here are some guidelines for doing so.You'll need to run Python 3 with a few packages, namelyREBOUND, CIRCLE-FIT, and ASTROQUERY.The files a001_read_nesvorny_elements.py through a018_free_inclinations_histogram.pyare meant to be run in sequential order.You should be able to run them in sequential order in a Python environmentor Python IDE with few to no changes.I use Spyder 6 to run Python scripts.a000_nesvorny_153_Hilda_family.list_090_WO_INTERLOPERS and the other filesprefixed a000_nesvorny are the lists of Hilda asteroids assigned to differentcollisional families by Vokrouhlicky+Nesvorny+et al 2025.a001_read_nesvorny_elements.py takes the names of objects in the a000_nesvorny filesand retrieves heliocentric orbital elements from JPL Horizons via Astroquery.The results are saved in b001_astorb_horizons.csv.a002_integrate_planets.py saves the heliocentric orbital elements of the fourouter planets over a specified integration time. It also saves the time pointsand calculates the invariable plane of the solar system over time, which remainspretty much constants as it should.The results are saved in b002_planets_aau, etc.a003_integrate_real_objects.py integrates each asteroid's orbit over the samespecified integration time.The results are saved in b003_astorb_aau, etc.a004_integrate_clones.py integrates clones of each chosen representative asteroid(Potomac, Hilda, Schubart, and Ismene) over the same time.It saves their initial semimajor axes and it saves their heliocentric orbitalelements over time.The results are saved in b004_Hilda_aau_clones, etc.a005_a_resonant_angles_calculate.py computes the 3A:2J resonant angle for eachHilda-group asteroid.The results are saved as b005_32angledeg_astorb.a005_b_resonant_angles_plot.py plots the 3A:2J resonant angle over time for eachasteroid, in case you want to examine the plots to see if any object is notlibrating in the MMR in these integrations.The resulting plots are saved as b005_angle32deg_1_6392_Hilda_ ... .pdf, etc.a006_label_asteroids.py creates a csv file with the names and labels of each asteroidas its family and whether it is librating or circulating, according to listsof numbers of circulating asteroids that you enter at the top of the file.The result is saved as b006_astorb_labels.csv.a007_statistics_vmf.py saves von Mises-Fisher statistics for different sets ofasteroids according to the abbreviations below:B = Background HildasP = Potomac familyH = Hilda familyS = Schubart familyF = Francette familyG = Guinevere familyBFG = Backgrounds + Francettes + Guineveres, etcL = libratingM = maybeC = circulatingLM = librating + maybe, etcThe results are saved as b007_B_L_statistics_vmf, etc.a008_statistics_cf.py saves circle-fit statistics for the Potomac clones, Hildaclones, Schubart clones, and Ismene clones.The results are saved as b008_Hlda_clones_statistics, etc.a009_laplaceplanevec_t0.py saves the Laplace plane for a range of semimajor axesat time zero for the integrations.The result is saved as b009_laplaceplane_t0.a010_a_laplaceplane.py saves the instantaneous Laplace plane over time for the mean semimajor axis of the different sets of asteroids according to the abbrevationsdescribed for a007_statistics_vmf.The results are saved as b010_laplaceplane_B_L, etc.a010_b_laplaceplane_clones.py saves the instantaneous Laplace plane over time forthe seed asteroid for each group of clones.The results are saves as b010_laplaceplane_Hilda_clones, etc.a011_qpaeiplots.py saves plots in the (q,p) plane and as subplots of (a,e), (e,i),and (a,i) for each subset of the Hilda group according to the usual abbreviations.You may comment and uncomment different sections of the code depending on what youwant to plot. Some of the code will make plots that distinguish betweenlibrating, maybe, and circulating objects in case you want to see the distributionof those. These plots are Figure 1 and Figure 2 in the paper.The plots are saved as b011_aei_all ... png, etc.a012_a_meanpoleconfidenceoverlaps.py produces Figure 3 in the paper, which plotsthe mean planes of the different subsets of objects in the (q,p) plane and theirvMF confidence regions. You can change which subsets you want to plot.The plots are saved as b012_meanpoleeconfidenceoverlaps ... png, etc.a012_b_meanpoleconfidenceoverlaps_animation.py does the same thing as a012_a,but it makes animations over time.The animations are saved as b012_b_meanpoleconfidenceoverlaps ...  mp4, etc.a013_deltadegplots_vmfobj_cfclones.py produces Figure 5 in the paper.The figure is saved as b013_deltadegplots_vmfobj_cfclones.png.a014_10plots_q_xcc_vmfobj_cfclones.py produces Figure 4 in the paper.The figure is saved as b014_10plots_q_xcc_vmfobj_cfclones.png.a015_16plots_qp_clones.py produces a figure with 4x4 subplots showing how the orbitpoles of the Potomac, Hilda, Schubart, and Ismene clones differentially precessalong circular arcs over four points in time. This figure is not used in the paper.The figure is saved as b015_16plots_qp_clones.png.a016_compare_laplace_planes.py is run in the Python IDE to produce a number for themaximum distance between the instantaneous Laplace planes calculated at variousrelevant semimajor axes. It does not save any results to a file.a017_table_numbers.py is run in the Python IDE to produce Table 1 in the paper. Itdoes not save any results to a file.a018_free_inclinations_histogram.py produces histograms of the free inclinationsand longitudes of ascending node of the various subsets of objects, relative tothe Laplace plane, the invariable plane, and the computed mean plane. It alsocomputes a statistical test of uniformity for the longitudes of node in each case.The histograms are saved as b018_Wfree_deg_B_L_wrt_laplace.png, etc.These are not used in the paper.